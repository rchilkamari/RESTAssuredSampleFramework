<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="5" total="24" passed="19">
  <reporter-output>
  </reporter-output>
  <suite name="restAssuredtestSuite" duration-ms="8437" started-at="2019-07-01T20:00:20Z" finished-at="2019-07-01T20:00:28Z">
    <groups>
    </groups>
    <test name="EmployeerestAssuredTest" duration-ms="8437" started-at="2019-07-01T20:00:20Z" finished-at="2019-07-01T20:00:28Z">
      <class name="com.Employeeapi.testCases.TC_002_GET_Single_Employee_Record">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.Employeeapi.testCases.TC_002_GET_Single_Employee_Record@457e2f02]" name="setup" is-config="true" duration-ms="3" started-at="2019-07-01T15:00:23Z" finished-at="2019-07-01T15:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="getAllEmployees()[pri:0, instance:com.Employeeapi.testCases.TC_002_GET_Single_Employee_Record@457e2f02]" name="getAllEmployees" is-config="true" duration-ms="234" started-at="2019-07-01T15:00:23Z" finished-at="2019-07-01T15:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method status="FAIL" signature="CheckContentEncoding()[pri:0, instance:com.Employeeapi.testCases.TC_002_GET_Single_Employee_Record@457e2f02]" name="CheckContentEncoding" duration-ms="1" started-at="2019-07-01T15:00:23Z" finished-at="2019-07-01T15:00:23Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [gzip] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [gzip] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:176)
	at org.testng.Assert.assertEquals(Assert.java:186)
	at com.Employeeapi.testCases.TC_002_GET_Single_Employee_Record.CheckContentEncoding(TC_002_GET_Single_Employee_Record.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckContentEncoding -->
        <test-method status="PASS" signature="CheckContentLength()[pri:0, instance:com.Employeeapi.testCases.TC_002_GET_Single_Employee_Record@457e2f02]" name="CheckContentLength" duration-ms="1" started-at="2019-07-01T15:00:23Z" finished-at="2019-07-01T15:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckContentLength -->
        <test-method status="PASS" signature="CheckCookies()[pri:0, instance:com.Employeeapi.testCases.TC_002_GET_Single_Employee_Record@457e2f02]" name="CheckCookies" duration-ms="1" started-at="2019-07-01T15:00:23Z" finished-at="2019-07-01T15:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckCookies -->
        <test-method status="FAIL" signature="CheckResponseBody()[pri:0, instance:com.Employeeapi.testCases.TC_002_GET_Single_Employee_Record@457e2f02]" name="CheckResponseBody" duration-ms="2" started-at="2019-07-01T15:00:23Z" finished-at="2019-07-01T15:00:23Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:286)
	at org.testng.Assert.assertEquals(Assert.java:296)
	at com.Employeeapi.testCases.TC_002_GET_Single_Employee_Record.CheckResponseBody(TC_002_GET_Single_Employee_Record.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckResponseBody -->
        <test-method status="PASS" signature="CheckStatusCode()[pri:0, instance:com.Employeeapi.testCases.TC_002_GET_Single_Employee_Record@457e2f02]" name="CheckStatusCode" duration-ms="1" started-at="2019-07-01T15:00:23Z" finished-at="2019-07-01T15:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckStatusCode -->
        <test-method status="PASS" signature="CheckStatusLine()[pri:0, instance:com.Employeeapi.testCases.TC_002_GET_Single_Employee_Record@457e2f02]" name="CheckStatusLine" duration-ms="1" started-at="2019-07-01T15:00:23Z" finished-at="2019-07-01T15:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckStatusLine -->
        <test-method status="PASS" signature="ResponseTime()[pri:0, instance:com.Employeeapi.testCases.TC_002_GET_Single_Employee_Record@457e2f02]" name="ResponseTime" duration-ms="1" started-at="2019-07-01T15:00:23Z" finished-at="2019-07-01T15:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ResponseTime -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.Employeeapi.testCases.TC_002_GET_Single_Employee_Record@457e2f02]" name="checkContentType" duration-ms="1" started-at="2019-07-01T15:00:23Z" finished-at="2019-07-01T15:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkServerType()[pri:0, instance:com.Employeeapi.testCases.TC_002_GET_Single_Employee_Record@457e2f02]" name="checkServerType" duration-ms="2" started-at="2019-07-01T15:00:23Z" finished-at="2019-07-01T15:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:com.Employeeapi.testCases.TC_002_GET_Single_Employee_Record@457e2f02]" name="teardown" is-config="true" duration-ms="1" started-at="2019-07-01T15:00:23Z" finished-at="2019-07-01T15:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.Employeeapi.testCases.TC_002_GET_Single_Employee_Record -->
      <class name="com.Employeeapi.testCases.TC_003_POST_Employee_Record">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.Employeeapi.testCases.TC_003_POST_Employee_Record@4cc0edeb]" name="setup" is-config="true" duration-ms="1" started-at="2019-07-01T15:00:23Z" finished-at="2019-07-01T15:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="CreateEmployee()[pri:0, instance:com.Employeeapi.testCases.TC_003_POST_Employee_Record@4cc0edeb]" name="CreateEmployee" is-config="true" duration-ms="5293" started-at="2019-07-01T15:00:23Z" finished-at="2019-07-01T15:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateEmployee -->
        <test-method status="PASS" signature="CheckContentEncoding()[pri:0, instance:com.Employeeapi.testCases.TC_003_POST_Employee_Record@4cc0edeb]" name="CheckContentEncoding" duration-ms="4" started-at="2019-07-01T15:00:28Z" finished-at="2019-07-01T15:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckContentEncoding -->
        <test-method status="FAIL" signature="CheckResponseBody()[pri:0, instance:com.Employeeapi.testCases.TC_003_POST_Employee_Record@4cc0edeb]" name="CheckResponseBody" duration-ms="2" started-at="2019-07-01T15:00:28Z" finished-at="2019-07-01T15:00:28Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:286)
	at org.testng.Assert.assertEquals(Assert.java:296)
	at com.Employeeapi.testCases.TC_003_POST_Employee_Record.CheckResponseBody(TC_003_POST_Employee_Record.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckResponseBody -->
        <test-method status="PASS" signature="CheckStatusCode()[pri:0, instance:com.Employeeapi.testCases.TC_003_POST_Employee_Record@4cc0edeb]" name="CheckStatusCode" duration-ms="3" started-at="2019-07-01T15:00:28Z" finished-at="2019-07-01T15:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckStatusCode -->
        <test-method status="PASS" signature="CheckStatusLine()[pri:0, instance:com.Employeeapi.testCases.TC_003_POST_Employee_Record@4cc0edeb]" name="CheckStatusLine" duration-ms="3" started-at="2019-07-01T15:00:28Z" finished-at="2019-07-01T15:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckStatusLine -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.Employeeapi.testCases.TC_003_POST_Employee_Record@4cc0edeb]" name="checkContentType" duration-ms="0" started-at="2019-07-01T15:00:28Z" finished-at="2019-07-01T15:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkServerType()[pri:0, instance:com.Employeeapi.testCases.TC_003_POST_Employee_Record@4cc0edeb]" name="checkServerType" duration-ms="1" started-at="2019-07-01T15:00:28Z" finished-at="2019-07-01T15:00:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
      </class> <!-- com.Employeeapi.testCases.TC_003_POST_Employee_Record -->
      <class name="com.Employeeapi.testCases.TC_001_GET_All_Employees">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.Employeeapi.testCases.TC_001_GET_All_Employees@7dc7cbad]" name="setup" is-config="true" duration-ms="61" started-at="2019-07-01T15:00:20Z" finished-at="2019-07-01T15:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="getAllEmployees()[pri:0, instance:com.Employeeapi.testCases.TC_001_GET_All_Employees@7dc7cbad]" name="getAllEmployees" is-config="true" duration-ms="2205" started-at="2019-07-01T15:00:20Z" finished-at="2019-07-01T15:00:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method status="PASS" signature="CheckContentEncoding()[pri:0, instance:com.Employeeapi.testCases.TC_001_GET_All_Employees@7dc7cbad]" name="CheckContentEncoding" duration-ms="22" started-at="2019-07-01T15:00:22Z" finished-at="2019-07-01T15:00:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckContentEncoding -->
        <test-method status="FAIL" signature="CheckContentLength()[pri:0, instance:com.Employeeapi.testCases.TC_001_GET_All_Employees@7dc7cbad]" name="CheckContentLength" duration-ms="4" started-at="2019-07-01T15:00:23Z" finished-at="2019-07-01T15:00:23Z">
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: null
	at java.lang.Integer.parseInt(Integer.java:542)
	at java.lang.Integer.parseInt(Integer.java:615)
	at com.Employeeapi.testCases.TC_001_GET_All_Employees.CheckContentLength(TC_001_GET_All_Employees.java:103)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckContentLength -->
        <test-method status="PASS" signature="CheckCookies()[pri:0, instance:com.Employeeapi.testCases.TC_001_GET_All_Employees@7dc7cbad]" name="CheckCookies" duration-ms="1" started-at="2019-07-01T15:00:23Z" finished-at="2019-07-01T15:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckCookies -->
        <test-method status="PASS" signature="CheckResponseBody()[pri:0, instance:com.Employeeapi.testCases.TC_001_GET_All_Employees@7dc7cbad]" name="CheckResponseBody" duration-ms="94" started-at="2019-07-01T15:00:23Z" finished-at="2019-07-01T15:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckResponseBody -->
        <test-method status="PASS" signature="CheckStatusCode()[pri:0, instance:com.Employeeapi.testCases.TC_001_GET_All_Employees@7dc7cbad]" name="CheckStatusCode" duration-ms="2" started-at="2019-07-01T15:00:23Z" finished-at="2019-07-01T15:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckStatusCode -->
        <test-method status="PASS" signature="CheckStatusLine()[pri:0, instance:com.Employeeapi.testCases.TC_001_GET_All_Employees@7dc7cbad]" name="CheckStatusLine" duration-ms="2" started-at="2019-07-01T15:00:23Z" finished-at="2019-07-01T15:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckStatusLine -->
        <test-method status="PASS" signature="ResponseTime()[pri:0, instance:com.Employeeapi.testCases.TC_001_GET_All_Employees@7dc7cbad]" name="ResponseTime" duration-ms="0" started-at="2019-07-01T15:00:23Z" finished-at="2019-07-01T15:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ResponseTime -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.Employeeapi.testCases.TC_001_GET_All_Employees@7dc7cbad]" name="checkContentType" duration-ms="2" started-at="2019-07-01T15:00:23Z" finished-at="2019-07-01T15:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="FAIL" signature="checkServerType()[pri:0, instance:com.Employeeapi.testCases.TC_001_GET_All_Employees@7dc7cbad]" name="checkServerType" duration-ms="4" started-at="2019-07-01T15:00:23Z" finished-at="2019-07-01T15:00:23Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [nginx/1.14.1] but found [Apache]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [nginx/1.14.1] but found [Apache]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:176)
	at org.testng.Assert.assertEquals(Assert.java:186)
	at com.Employeeapi.testCases.TC_001_GET_All_Employees.checkServerType(TC_001_GET_All_Employees.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:com.Employeeapi.testCases.TC_001_GET_All_Employees@7dc7cbad]" name="teardown" is-config="true" duration-ms="0" started-at="2019-07-01T15:00:23Z" finished-at="2019-07-01T15:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.Employeeapi.testCases.TC_001_GET_All_Employees -->
    </test> <!-- EmployeerestAssuredTest -->
  </suite> <!-- restAssuredtestSuite -->
</testng-results>
